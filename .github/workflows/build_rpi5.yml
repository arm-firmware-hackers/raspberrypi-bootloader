name: Build Bootloader für Raspberry Pi 5

on:
  push:
    tags:
      - 'v*'  # Triggern beim Erstellen eines Tags wie v1.0, v1.1 usw.
  workflow_dispatch:  # Ermöglicht das manuelle Ausführen der Action

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dosfstools build-essential

      - name: Build Boot Image
        run: |
          chmod +x ./build_boot.sh
          ./build_boot.sh 3  # Der Parameter 3 bedeutet Raspberry Pi 5

      - name: Check if boot.vfat exists
        run: |
          ls -l boot.vfat

      - name: Verify boot.vfat exists before compressing
        run: |
          if [ -f "boot.vfat" ]; then
            echo "boot.vfat exists, proceeding with compression."
          else
            echo "boot.vfat not found, aborting compression."
            exit 1
          fi

      - name: Compress boot.vfat
        run: |
          mkdir -p output
          tar -czvf output/boot-rpi5.tar.gz boot.vfat

      - name: Create Release
        uses: gh workflows/create-release@v1
        with:
          tag_name: v1.0  # Ersetze dies mit der gewünschten Version (kann auch dynamisch sein)
          release_name: "Raspberry Pi 5 Bootloader v1.0"
          body: "Automatisches Build des Bootloaders für Raspberry Pi 5"

      - name: Upload bootloader tar.gz to release
        uses: gh actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/boot-rpi5.tar.gz
          asset_name: boot-rpi5.tar.gz
          asset_content_type: application/gzip
